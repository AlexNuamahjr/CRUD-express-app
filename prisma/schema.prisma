// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  firstName String @db.VarChar(100)
  lastName String @db.VarChar(100)
  dateOfBirth DateTime
  userName String @unique @db.VarChar(100)
  email String @unique @db.VarChar(100)
  password String
  isVerified Boolean @default(false)
  profile Profile?
  Note Note[]
  PasswordResetToken PasswordResetToken[]
  EmailVerification EmailVerification[]
}

model EmailVerification {
  id Int @id @default(autoincrement())
  token String
  expireAt DateTime
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Profile {
  id Int @id @default(autoincrement())
  bio String?
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
}

model Note {
  id Int @id @default(autoincrement())
  title String?
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author User @relation(fields: [authorId], references: [id])
  authorId Int @unique
}

model PasswordResetToken {
  id Int @id @default(autoincrement())
  token String
  expireAt DateTime
  user User @relation(fields: [userId], references: [id])
  userId Int
}
